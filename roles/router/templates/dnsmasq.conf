# Managed by Ansible

bind-interfaces # Bind only on specific interfaces, not 0.0.0.0
interface={{ subnets | json_query("[].iface") | join(",") }}

# DNS
bogus-priv # Do not forward local domain queries to upstream
domain={{ dns_tld }} # Local TLD - never forward to upstream & disallow advertising "google.com" hostname
domain-needed # Do not forward plain domain (no TLD) to upstream
local=/{{ dns_tld }}/ # Local TLD - never forward to upstream
expand-hosts # Add local TLD to /etc/hosts & DHCP leases
localise-queries # Return records per-interface
local-service # Only accept DNS queries from interfaces defined above
#no-hosts # Don't read /etc/hosts
stop-dns-rebind # Don't accept upstream DNS responses to private IP ranges
local-ttl=60 # TTL for local DNS records

# Breaks some major websites
#dnssec # Use DNSSEC with the upstreams
#dnssec-check-unsigned # Check if unsigned records are valid
#conf-file=/usr/share/dnsmasq-base/trust-anchors.conf # DNSSEC default trust anchors

{% for address in addresses -%}
	address=/{{ address.domains | join("/") }}/{{ address.ip }}
{%- endfor %}

# DHCP
no-dhcp-interface={{ subnets | json_query("[?!dhcp].iface") | join(",") }}
dhcp-ttl=30 # TTL for DNS records from DHCP leases

{% for subnet in subnets if subnet.dhcp %}

# {{ subnet.iface }} - {{ subnet.cidr }}
dhcp-range=set:{{ subnet.iface }},{{ subnet.cidr | ipaddr(subnet.dhcp_range_start | default(100)) | ipaddr("address") }},{{ subnet.cidr | ipaddr(subnet.dhcp_range_end | default(200)) | ipaddr("address") }},{{ subnet.cidr | ipaddr("netmask") }},{{ subnet.dhcp_lease_time | default("8h") }}
dhcp-option=interface:{{ subnet.iface }},option:router
host-record={{ dns_hostname }}.{{ dns_tld }},{{ subnet.cidr | ipaddr("address") }}

{% for record in (host_records | default([])) -%}
    host-record={{ record.hostname }}.{{ dns_tld }},{{ subnet.cidr | ipaddr(record.ip_index) | ipaddr("address") }}
{% endfor %}

{% for lease in (subnet.dhcp_static_leases | default([])) -%}
	dhcp-host={{ lease.mac }},{{ subnet.cidr | ipaddr(lease.ip_index) | ipaddr("address") }},{{ lease.hostname }},{{ lease.lease_time | default(subnet.dhcp_static_lease_time | default("1d")) }}
{% endfor %}
{% endfor %}
